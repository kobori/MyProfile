{"version":3,"sources":["meteor://ðŸ’»app/models/data_base.js","meteor://ðŸ’»app/models/friendship.js","meteor://ðŸ’»app/routes/friendship.js","meteor://ðŸ’»app/routes/home.js","meteor://ðŸ’»app/routes/index.js","meteor://ðŸ’»app/routes/user.js","meteor://ðŸ’»app/server/accounts.js","meteor://ðŸ’»app/server/methods.js","meteor://ðŸ’»app/server/publication.js","meteor://ðŸ’»app/server/startup.js"],"names":["Post","Mongo","Collection","publish","message","name","params","time","Date","userId","Meteor","insert","winston","info","list","userIds","find","sort","Friendship","follow","friendId","unfollow","remove","isFollowing","findOneFaster","followings","count","followers","timelineIds","map","f","push","followersAndFollowings","_id","$or","Router","route","call","redirect","render","data","posts","fastRender","configure","layoutTemplate","subscribe","Session","set","user","users","findOne","Accounts","onCreateUser","options","profile","methods","followUser","unfollowUser","profileUpdate","about","update","$set","multi","addPost","removeTimeline","id","require","add","transports","File","filename","maxsize","startup","console","log"],"mappings":"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","file":"/app.js","sourcesContent":["Post = new Mongo.Collection('posts');\n\nPost.publish = function(message, name) {\n var params = {\n  message: message,\n  name: name,\n  time: new Date(),\n  userId: Meteor.userId()\n };\n this.insert(params);\n winston.info(\"Post.publish: \", params);\n};\n\n\nPost.list = function(userIds) {\n return this.find(\n  {userId: {\"$in\": userIds}},\n  {sort: {time: -1, name: 1}}\n );\n};","Friendship = new Meteor.Collection('friendships');\n\nFriendship.follow = function(friendId) {\n var params = {\n  userId: Meteor.userId(),\n  friendId: friendId\n };\n this.insert(params);\n winston.info(\"Friendship.follow: \", params);\n};\n\nFriendship.unfollow = function(friendId) {\n var params = {\n  userId: Meteor.userId(),\n  friendId: friendId\n };\n this.remove(params);\n winston.info(\"Friendship.unfollow: \", params);\n};\n\nFriendship.isFollowing = function(friendId) {\n return this.findOneFaster({\n  userId: Meteor.userId(),\n  friendId: friendId\n });\n};\n\nFriendship.followings = function(userId) {\n return this.find({userId: userId}).count();\n};\n\nFriendship.followers = function(friendId) {\n return this.find({friendId: friendId}).count();\n};\n\nFriendship.timelineIds = function(userId) {\n var timelineIds = this.find({\n  userId: userId\n }).map(function(f) {\n  return f.friendId;\n });\n timelineIds.push(userId);\n return timelineIds;\n};\n\nFriendship.followersAndFollowings = function(_id) {\n  return this.find({\n    $or: [{userId: _id}, {friendId: _id}]\n  });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","Router.route(\"/user/:_id/follow\", function() {\n  var _id = this.params._id;\n  Meteor.call(\"followUser\", _id);\n  this.redirect(\"/user/\" + _id);\n}, { name: \"user.follow\" });\n\nRouter.route(\"/user/:_id/unfollow\", function() {\n  var _id = this.params._id;\n  Meteor.call(\"unfollowUser\", _id);\n  this.redirect(\"/user/\" + _id);\n}, { name: \"user.unfollow\" });","/*\nFlowRouter.route('/',{\n  name: 'main',\n  action(){\n    BlazeLayout.render('main', {main: 'home'})\n  }\n})\n*/\n\nRouter.route('/', function(){\n  var _id = Meteor.userId();\n  var timelineIds = Friendship.timelineIds(_id);\n  this.render('home', {\n    data: function(){\n      return{\n        posts: Post.list(timelineIds),\n        followers: Friendship.followers(_id),\n        followings: Friendship.followings(_id)\n\n      }\n    }\n  });\n}, {\n  name: 'home', \n  fastRender: true\n})\n\n\nRouter.route('/amigos', function(){\n  var _id = Meteor.userId();\n\n  this.render('amigos', {\n\n    data: function(){\n      return{\n        posts: Post.find({})\n      }\n    }\n  })\n})\n","Router.configure({\n layoutTemplate: \"main\"\n});","Router.route(\"/user/:_id\", function() {\n  var _id = this.params._id;  \n  this.subscribe(\"user\", _id);\n  var isFollowing = Friendship.isFollowing(_id);\n  Session.set(\"currentUserId\", _id);\n  Session.set(\"isFollowing\", isFollowing);\n  this.render(\"user\", {\n    data: function() {\n      return {\n        user: Meteor.users.findOne({_id: _id}),\n        posts: Post.list([_id]),\n        followers: Friendship.followers(_id),\n        followings: Friendship.followings(_id)\n      }\n    }\n  });\n}, { \n  name: \"user\",\n  fastRender: true\n});\n","Accounts.onCreateUser(function(options, user) {\n user['profile'] = options.profile;\n return user;\n});","Meteor.methods({\n  followUser: function(friendId) {\n    Friendship.follow(friendId);\n   },\n\n  unfollowUser: function(friendId) {\n    Friendship.unfollow(friendId);\n  },\n\n  profileUpdate: function(name, about) {\n    Meteor.users.update(\n      {_id: this.userId},\n      {$set: {\n       \"profile.name\": name,\n       \"profile.about\": about\n        }\n      }\n    );\n\n    Post.update(\n      {userId: this.userId},\n      {$set: {\n        name: name\n      }},\n      {multi: true}\n    );\n  },\n\n  addPost: function(message, name){\n    Post.publish(message, name);\n\n  },\n  \n  removeTimeline: function(id){\n    Post.remove({_id: id, userId: this.userId});\n  }\n\n\n})","winston = Meteor.require('winston');\n\nwinston.add(winston.transports.File, {\n  filename: '../application.log',\n  maxsize: 1024\n});\n\nMeteor.startup(function() {\n  console.log(\"Iniciando Meteor Bird\");\n});","Meteor.startup(function() {\n\n  Meteor.publish(\"posts\", function(_id) { \n    var _id = Meteor.userId();\n    var timelineIds = Friendship.timelineIds(_id);\n    return Post.list(timelineIds);\n  });\n\n  Meteor.publish(\"friendship\", function(_id) {\n    var _id = Meteor.userId()\n    return Friendship.followersAndFollowings(_id);\n  });\n\n  \n  Meteor.publish(\"isFollowing\", function(_id) {\n    var _id = Meteor.userId()\n    return Friendship.isFollowing(_id);\n  });\n  \n\n  Meteor.publish(\"user\", function(_id) {\n    return Meteor.users.find({_id: _id});\n  });\n\n\n})"]}